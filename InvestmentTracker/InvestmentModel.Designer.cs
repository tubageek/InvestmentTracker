//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvestmentTracker.MutualFundReturnType), "MutualFundReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvestmentTracker.MutualFundReturn), true)]
[assembly: EdmRelationshipAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFund", "MutualFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvestmentTracker.MutualFund), "MutualFundReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvestmentTracker.MutualFundReturn), true)]
[assembly: EdmRelationshipAttribute("InvestmentModel", "FK_MutualFundTransaction_MutualFund", "MutualFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvestmentTracker.MutualFund), "MutualFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvestmentTracker.MutualFundTransaction), true)]

#endregion

namespace InvestmentTracker
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InvestmentEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InvestmentEntities object using the connection string found in the 'InvestmentEntities' section of the application configuration file.
        /// </summary>
        public InvestmentEntities() : base("name=InvestmentEntities", "InvestmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InvestmentEntities object.
        /// </summary>
        public InvestmentEntities(string connectionString) : base(connectionString, "InvestmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InvestmentEntities object.
        /// </summary>
        public InvestmentEntities(EntityConnection connection) : base(connection, "InvestmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundView> MutualFundViews
        {
            get
            {
                if ((_MutualFundViews == null))
                {
                    _MutualFundViews = base.CreateObjectSet<MutualFundView>("MutualFundViews");
                }
                return _MutualFundViews;
            }
        }
        private ObjectSet<MutualFundView> _MutualFundViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFund> MutualFunds
        {
            get
            {
                if ((_MutualFunds == null))
                {
                    _MutualFunds = base.CreateObjectSet<MutualFund>("MutualFunds");
                }
                return _MutualFunds;
            }
        }
        private ObjectSet<MutualFund> _MutualFunds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundReturnType> MutualFundReturnTypes
        {
            get
            {
                if ((_MutualFundReturnTypes == null))
                {
                    _MutualFundReturnTypes = base.CreateObjectSet<MutualFundReturnType>("MutualFundReturnTypes");
                }
                return _MutualFundReturnTypes;
            }
        }
        private ObjectSet<MutualFundReturnType> _MutualFundReturnTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundSourceType> MutualFundSourceTypes
        {
            get
            {
                if ((_MutualFundSourceTypes == null))
                {
                    _MutualFundSourceTypes = base.CreateObjectSet<MutualFundSourceType>("MutualFundSourceTypes");
                }
                return _MutualFundSourceTypes;
            }
        }
        private ObjectSet<MutualFundSourceType> _MutualFundSourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundReturn> MutualFundReturns
        {
            get
            {
                if ((_MutualFundReturns == null))
                {
                    _MutualFundReturns = base.CreateObjectSet<MutualFundReturn>("MutualFundReturns");
                }
                return _MutualFundReturns;
            }
        }
        private ObjectSet<MutualFundReturn> _MutualFundReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundTransaction> MutualFundTransactions
        {
            get
            {
                if ((_MutualFundTransactions == null))
                {
                    _MutualFundTransactions = base.CreateObjectSet<MutualFundTransaction>("MutualFundTransactions");
                }
                return _MutualFundTransactions;
            }
        }
        private ObjectSet<MutualFundTransaction> _MutualFundTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MutualFundPriceHistory> MutualFundPriceHistories
        {
            get
            {
                if ((_MutualFundPriceHistories == null))
                {
                    _MutualFundPriceHistories = base.CreateObjectSet<MutualFundPriceHistory>("MutualFundPriceHistories");
                }
                return _MutualFundPriceHistories;
            }
        }
        private ObjectSet<MutualFundPriceHistory> _MutualFundPriceHistories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundViews(MutualFundView mutualFundView)
        {
            base.AddObject("MutualFundViews", mutualFundView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFunds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFunds(MutualFund mutualFund)
        {
            base.AddObject("MutualFunds", mutualFund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundReturnTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundReturnTypes(MutualFundReturnType mutualFundReturnType)
        {
            base.AddObject("MutualFundReturnTypes", mutualFundReturnType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundSourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundSourceTypes(MutualFundSourceType mutualFundSourceType)
        {
            base.AddObject("MutualFundSourceTypes", mutualFundSourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundReturns(MutualFundReturn mutualFundReturn)
        {
            base.AddObject("MutualFundReturns", mutualFundReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundTransactions(MutualFundTransaction mutualFundTransaction)
        {
            base.AddObject("MutualFundTransactions", mutualFundTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MutualFundPriceHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMutualFundPriceHistories(MutualFundPriceHistory mutualFundPriceHistory)
        {
            base.AddObject("MutualFundPriceHistories", mutualFundPriceHistory);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.DateTime>> GetLast12StartDate()
        {
            return base.ExecuteFunction<Nullable<global::System.DateTime>>("GetLast12StartDate");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFund object.
        /// </summary>
        /// <param name="mutualFundID">Initial value of the MutualFundID property.</param>
        /// <param name="mutualFundSymbol">Initial value of the MutualFundSymbol property.</param>
        /// <param name="mutualFundDescription">Initial value of the MutualFundDescription property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="numberOfShares">Initial value of the NumberOfShares property.</param>
        /// <param name="lastKnownValue">Initial value of the LastKnownValue property.</param>
        /// <param name="hasBalance">Initial value of the HasBalance property.</param>
        /// <param name="isRetirementFund">Initial value of the IsRetirementFund property.</param>
        /// <param name="isGoogleTracked">Initial value of the IsGoogleTracked property.</param>
        public static MutualFund CreateMutualFund(global::System.Int32 mutualFundID, global::System.String mutualFundSymbol, global::System.String mutualFundDescription, global::System.Int32 accountID, global::System.Decimal numberOfShares, global::System.Decimal lastKnownValue, global::System.Boolean hasBalance, global::System.Boolean isRetirementFund, global::System.Boolean isGoogleTracked)
        {
            MutualFund mutualFund = new MutualFund();
            mutualFund.MutualFundID = mutualFundID;
            mutualFund.MutualFundSymbol = mutualFundSymbol;
            mutualFund.MutualFundDescription = mutualFundDescription;
            mutualFund.AccountID = accountID;
            mutualFund.NumberOfShares = numberOfShares;
            mutualFund.LastKnownValue = lastKnownValue;
            mutualFund.HasBalance = hasBalance;
            mutualFund.IsRetirementFund = isRetirementFund;
            mutualFund.IsGoogleTracked = isGoogleTracked;
            return mutualFund;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundID
        {
            get
            {
                return _MutualFundID;
            }
            set
            {
                if (_MutualFundID != value)
                {
                    OnMutualFundIDChanging(value);
                    ReportPropertyChanging("MutualFundID");
                    _MutualFundID = StructuralObject.SetValidValue(value, "MutualFundID");
                    ReportPropertyChanged("MutualFundID");
                    OnMutualFundIDChanged();
                }
            }
        }
        private global::System.Int32 _MutualFundID;
        partial void OnMutualFundIDChanging(global::System.Int32 value);
        partial void OnMutualFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundSymbol
        {
            get
            {
                return _MutualFundSymbol;
            }
            set
            {
                OnMutualFundSymbolChanging(value);
                ReportPropertyChanging("MutualFundSymbol");
                _MutualFundSymbol = StructuralObject.SetValidValue(value, false, "MutualFundSymbol");
                ReportPropertyChanged("MutualFundSymbol");
                OnMutualFundSymbolChanged();
            }
        }
        private global::System.String _MutualFundSymbol;
        partial void OnMutualFundSymbolChanging(global::System.String value);
        partial void OnMutualFundSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundDescription
        {
            get
            {
                return _MutualFundDescription;
            }
            set
            {
                OnMutualFundDescriptionChanging(value);
                ReportPropertyChanging("MutualFundDescription");
                _MutualFundDescription = StructuralObject.SetValidValue(value, false, "MutualFundDescription");
                ReportPropertyChanged("MutualFundDescription");
                OnMutualFundDescriptionChanged();
            }
        }
        private global::System.String _MutualFundDescription;
        partial void OnMutualFundDescriptionChanging(global::System.String value);
        partial void OnMutualFundDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, "AccountID");
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfShares
        {
            get
            {
                return _NumberOfShares;
            }
            set
            {
                OnNumberOfSharesChanging(value);
                ReportPropertyChanging("NumberOfShares");
                _NumberOfShares = StructuralObject.SetValidValue(value, "NumberOfShares");
                ReportPropertyChanged("NumberOfShares");
                OnNumberOfSharesChanged();
            }
        }
        private global::System.Decimal _NumberOfShares;
        partial void OnNumberOfSharesChanging(global::System.Decimal value);
        partial void OnNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LastKnownValue
        {
            get
            {
                return _LastKnownValue;
            }
            set
            {
                OnLastKnownValueChanging(value);
                ReportPropertyChanging("LastKnownValue");
                _LastKnownValue = StructuralObject.SetValidValue(value, "LastKnownValue");
                ReportPropertyChanged("LastKnownValue");
                OnLastKnownValueChanged();
            }
        }
        private global::System.Decimal _LastKnownValue;
        partial void OnLastKnownValueChanging(global::System.Decimal value);
        partial void OnLastKnownValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateValueRecorded
        {
            get
            {
                return _DateValueRecorded;
            }
            set
            {
                OnDateValueRecordedChanging(value);
                ReportPropertyChanging("DateValueRecorded");
                _DateValueRecorded = StructuralObject.SetValidValue(value, "DateValueRecorded");
                ReportPropertyChanged("DateValueRecorded");
                OnDateValueRecordedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateValueRecorded;
        partial void OnDateValueRecordedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateValueRecordedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasBalance
        {
            get
            {
                return _HasBalance;
            }
            set
            {
                OnHasBalanceChanging(value);
                ReportPropertyChanging("HasBalance");
                _HasBalance = StructuralObject.SetValidValue(value, "HasBalance");
                ReportPropertyChanged("HasBalance");
                OnHasBalanceChanged();
            }
        }
        private global::System.Boolean _HasBalance;
        partial void OnHasBalanceChanging(global::System.Boolean value);
        partial void OnHasBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRetirementFund
        {
            get
            {
                return _IsRetirementFund;
            }
            set
            {
                OnIsRetirementFundChanging(value);
                ReportPropertyChanging("IsRetirementFund");
                _IsRetirementFund = StructuralObject.SetValidValue(value, "IsRetirementFund");
                ReportPropertyChanged("IsRetirementFund");
                OnIsRetirementFundChanged();
            }
        }
        private global::System.Boolean _IsRetirementFund;
        partial void OnIsRetirementFundChanging(global::System.Boolean value);
        partial void OnIsRetirementFundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGoogleTracked
        {
            get
            {
                return _IsGoogleTracked;
            }
            set
            {
                OnIsGoogleTrackedChanging(value);
                ReportPropertyChanging("IsGoogleTracked");
                _IsGoogleTracked = StructuralObject.SetValidValue(value, "IsGoogleTracked");
                ReportPropertyChanged("IsGoogleTracked");
                OnIsGoogleTrackedChanged();
            }
        }
        private global::System.Boolean _IsGoogleTracked;
        partial void OnIsGoogleTrackedChanging(global::System.Boolean value);
        partial void OnIsGoogleTrackedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFund", "MutualFundReturn")]
        public EntityCollection<MutualFundReturn> MutualFundReturns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MutualFundReturn>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFundReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MutualFundReturn>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFundReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundTransaction_MutualFund", "MutualFundTransaction")]
        public EntityCollection<MutualFundTransaction> MutualFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MutualFundTransaction>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MutualFundTransaction>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFundTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundPriceHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundPriceHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundPriceHistory object.
        /// </summary>
        /// <param name="mutualFundSymbol">Initial value of the MutualFundSymbol property.</param>
        /// <param name="quoteDate">Initial value of the QuoteDate property.</param>
        /// <param name="dayPrice">Initial value of the DayPrice property.</param>
        public static MutualFundPriceHistory CreateMutualFundPriceHistory(global::System.String mutualFundSymbol, global::System.DateTime quoteDate, global::System.Decimal dayPrice)
        {
            MutualFundPriceHistory mutualFundPriceHistory = new MutualFundPriceHistory();
            mutualFundPriceHistory.MutualFundSymbol = mutualFundSymbol;
            mutualFundPriceHistory.QuoteDate = quoteDate;
            mutualFundPriceHistory.DayPrice = dayPrice;
            return mutualFundPriceHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundSymbol
        {
            get
            {
                return _MutualFundSymbol;
            }
            set
            {
                if (_MutualFundSymbol != value)
                {
                    OnMutualFundSymbolChanging(value);
                    ReportPropertyChanging("MutualFundSymbol");
                    _MutualFundSymbol = StructuralObject.SetValidValue(value, false, "MutualFundSymbol");
                    ReportPropertyChanged("MutualFundSymbol");
                    OnMutualFundSymbolChanged();
                }
            }
        }
        private global::System.String _MutualFundSymbol;
        partial void OnMutualFundSymbolChanging(global::System.String value);
        partial void OnMutualFundSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuoteDate
        {
            get
            {
                return _QuoteDate;
            }
            set
            {
                if (_QuoteDate != value)
                {
                    OnQuoteDateChanging(value);
                    ReportPropertyChanging("QuoteDate");
                    _QuoteDate = StructuralObject.SetValidValue(value, "QuoteDate");
                    ReportPropertyChanged("QuoteDate");
                    OnQuoteDateChanged();
                }
            }
        }
        private global::System.DateTime _QuoteDate;
        partial void OnQuoteDateChanging(global::System.DateTime value);
        partial void OnQuoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPrice
        {
            get
            {
                return _DayPrice;
            }
            set
            {
                OnDayPriceChanging(value);
                ReportPropertyChanging("DayPrice");
                _DayPrice = StructuralObject.SetValidValue(value, "DayPrice");
                ReportPropertyChanged("DayPrice");
                OnDayPriceChanged();
            }
        }
        private global::System.Decimal _DayPrice;
        partial void OnDayPriceChanging(global::System.Decimal value);
        partial void OnDayPriceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundReturn object.
        /// </summary>
        /// <param name="mutualFundReturnID">Initial value of the MutualFundReturnID property.</param>
        /// <param name="mutualFundID">Initial value of the MutualFundID property.</param>
        /// <param name="mutualFundReturnTypeName">Initial value of the MutualFundReturnTypeName property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="numberOfShares">Initial value of the NumberOfShares property.</param>
        /// <param name="pricePerShare">Initial value of the PricePerShare property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="destination">Initial value of the Destination property.</param>
        public static MutualFundReturn CreateMutualFundReturn(global::System.Int32 mutualFundReturnID, global::System.Int32 mutualFundID, global::System.String mutualFundReturnTypeName, global::System.Decimal amount, global::System.Decimal numberOfShares, global::System.Decimal pricePerShare, global::System.DateTime transactionDate, global::System.String destination)
        {
            MutualFundReturn mutualFundReturn = new MutualFundReturn();
            mutualFundReturn.MutualFundReturnID = mutualFundReturnID;
            mutualFundReturn.MutualFundID = mutualFundID;
            mutualFundReturn.MutualFundReturnTypeName = mutualFundReturnTypeName;
            mutualFundReturn.Amount = amount;
            mutualFundReturn.NumberOfShares = numberOfShares;
            mutualFundReturn.PricePerShare = pricePerShare;
            mutualFundReturn.TransactionDate = transactionDate;
            mutualFundReturn.Destination = destination;
            return mutualFundReturn;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundReturnID
        {
            get
            {
                return _MutualFundReturnID;
            }
            set
            {
                if (_MutualFundReturnID != value)
                {
                    OnMutualFundReturnIDChanging(value);
                    ReportPropertyChanging("MutualFundReturnID");
                    _MutualFundReturnID = StructuralObject.SetValidValue(value, "MutualFundReturnID");
                    ReportPropertyChanged("MutualFundReturnID");
                    OnMutualFundReturnIDChanged();
                }
            }
        }
        private global::System.Int32 _MutualFundReturnID;
        partial void OnMutualFundReturnIDChanging(global::System.Int32 value);
        partial void OnMutualFundReturnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundID
        {
            get
            {
                return _MutualFundID;
            }
            set
            {
                OnMutualFundIDChanging(value);
                ReportPropertyChanging("MutualFundID");
                _MutualFundID = StructuralObject.SetValidValue(value, "MutualFundID");
                ReportPropertyChanged("MutualFundID");
                OnMutualFundIDChanged();
            }
        }
        private global::System.Int32 _MutualFundID;
        partial void OnMutualFundIDChanging(global::System.Int32 value);
        partial void OnMutualFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundReturnTypeName
        {
            get
            {
                return _MutualFundReturnTypeName;
            }
            set
            {
                OnMutualFundReturnTypeNameChanging(value);
                ReportPropertyChanging("MutualFundReturnTypeName");
                _MutualFundReturnTypeName = StructuralObject.SetValidValue(value, false, "MutualFundReturnTypeName");
                ReportPropertyChanged("MutualFundReturnTypeName");
                OnMutualFundReturnTypeNameChanged();
            }
        }
        private global::System.String _MutualFundReturnTypeName;
        partial void OnMutualFundReturnTypeNameChanging(global::System.String value);
        partial void OnMutualFundReturnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfShares
        {
            get
            {
                return _NumberOfShares;
            }
            set
            {
                OnNumberOfSharesChanging(value);
                ReportPropertyChanging("NumberOfShares");
                _NumberOfShares = StructuralObject.SetValidValue(value, "NumberOfShares");
                ReportPropertyChanged("NumberOfShares");
                OnNumberOfSharesChanged();
            }
        }
        private global::System.Decimal _NumberOfShares;
        partial void OnNumberOfSharesChanging(global::System.Decimal value);
        partial void OnNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PricePerShare
        {
            get
            {
                return _PricePerShare;
            }
            set
            {
                OnPricePerShareChanging(value);
                ReportPropertyChanging("PricePerShare");
                _PricePerShare = StructuralObject.SetValidValue(value, "PricePerShare");
                ReportPropertyChanged("PricePerShare");
                OnPricePerShareChanged();
            }
        }
        private global::System.Decimal _PricePerShare;
        partial void OnPricePerShareChanging(global::System.Decimal value);
        partial void OnPricePerShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                OnDestinationChanging(value);
                ReportPropertyChanging("Destination");
                _Destination = StructuralObject.SetValidValue(value, false, "Destination");
                ReportPropertyChanged("Destination");
                OnDestinationChanged();
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType")]
        public MutualFundReturnType MutualFundReturnType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFundReturnType>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFundReturnType>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MutualFundReturnType> MutualFundReturnTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFundReturnType>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MutualFundReturnType>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturnType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFund", "MutualFund")]
        public MutualFund MutualFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MutualFund> MutualFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundReturn_MutualFund", "MutualFund", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundReturnType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundReturnType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundReturnType object.
        /// </summary>
        /// <param name="mutualFundReturnTypeName">Initial value of the MutualFundReturnTypeName property.</param>
        public static MutualFundReturnType CreateMutualFundReturnType(global::System.String mutualFundReturnTypeName)
        {
            MutualFundReturnType mutualFundReturnType = new MutualFundReturnType();
            mutualFundReturnType.MutualFundReturnTypeName = mutualFundReturnTypeName;
            return mutualFundReturnType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundReturnTypeName
        {
            get
            {
                return _MutualFundReturnTypeName;
            }
            set
            {
                if (_MutualFundReturnTypeName != value)
                {
                    OnMutualFundReturnTypeNameChanging(value);
                    ReportPropertyChanging("MutualFundReturnTypeName");
                    _MutualFundReturnTypeName = StructuralObject.SetValidValue(value, false, "MutualFundReturnTypeName");
                    ReportPropertyChanged("MutualFundReturnTypeName");
                    OnMutualFundReturnTypeNameChanged();
                }
            }
        }
        private global::System.String _MutualFundReturnTypeName;
        partial void OnMutualFundReturnTypeNameChanging(global::System.String value);
        partial void OnMutualFundReturnTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturn")]
        public EntityCollection<MutualFundReturn> MutualFundReturns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MutualFundReturn>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MutualFundReturn>("InvestmentModel.FK_MutualFundReturn_MutualFundReturnType", "MutualFundReturn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundSourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundSourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundSourceType object.
        /// </summary>
        /// <param name="mutualFundSourceTypeName">Initial value of the MutualFundSourceTypeName property.</param>
        public static MutualFundSourceType CreateMutualFundSourceType(global::System.String mutualFundSourceTypeName)
        {
            MutualFundSourceType mutualFundSourceType = new MutualFundSourceType();
            mutualFundSourceType.MutualFundSourceTypeName = mutualFundSourceTypeName;
            return mutualFundSourceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundSourceTypeName
        {
            get
            {
                return _MutualFundSourceTypeName;
            }
            set
            {
                if (_MutualFundSourceTypeName != value)
                {
                    OnMutualFundSourceTypeNameChanging(value);
                    ReportPropertyChanging("MutualFundSourceTypeName");
                    _MutualFundSourceTypeName = StructuralObject.SetValidValue(value, false, "MutualFundSourceTypeName");
                    ReportPropertyChanged("MutualFundSourceTypeName");
                    OnMutualFundSourceTypeNameChanged();
                }
            }
        }
        private global::System.String _MutualFundSourceTypeName;
        partial void OnMutualFundSourceTypeNameChanging(global::System.String value);
        partial void OnMutualFundSourceTypeNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundTransaction object.
        /// </summary>
        /// <param name="mutualFundTransactionID">Initial value of the MutualFundTransactionID property.</param>
        /// <param name="mutualFundID">Initial value of the MutualFundID property.</param>
        /// <param name="numberOfShares">Initial value of the NumberOfShares property.</param>
        /// <param name="pricePerShare">Initial value of the PricePerShare property.</param>
        /// <param name="actualAmount">Initial value of the ActualAmount property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        public static MutualFundTransaction CreateMutualFundTransaction(global::System.Int32 mutualFundTransactionID, global::System.Int32 mutualFundID, global::System.Decimal numberOfShares, global::System.Decimal pricePerShare, global::System.Decimal actualAmount, global::System.DateTime transactionDate, global::System.String note)
        {
            MutualFundTransaction mutualFundTransaction = new MutualFundTransaction();
            mutualFundTransaction.MutualFundTransactionID = mutualFundTransactionID;
            mutualFundTransaction.MutualFundID = mutualFundID;
            mutualFundTransaction.NumberOfShares = numberOfShares;
            mutualFundTransaction.PricePerShare = pricePerShare;
            mutualFundTransaction.ActualAmount = actualAmount;
            mutualFundTransaction.TransactionDate = transactionDate;
            mutualFundTransaction.Note = note;
            return mutualFundTransaction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundTransactionID
        {
            get
            {
                return _MutualFundTransactionID;
            }
            set
            {
                if (_MutualFundTransactionID != value)
                {
                    OnMutualFundTransactionIDChanging(value);
                    ReportPropertyChanging("MutualFundTransactionID");
                    _MutualFundTransactionID = StructuralObject.SetValidValue(value, "MutualFundTransactionID");
                    ReportPropertyChanged("MutualFundTransactionID");
                    OnMutualFundTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _MutualFundTransactionID;
        partial void OnMutualFundTransactionIDChanging(global::System.Int32 value);
        partial void OnMutualFundTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundID
        {
            get
            {
                return _MutualFundID;
            }
            set
            {
                OnMutualFundIDChanging(value);
                ReportPropertyChanging("MutualFundID");
                _MutualFundID = StructuralObject.SetValidValue(value, "MutualFundID");
                ReportPropertyChanged("MutualFundID");
                OnMutualFundIDChanged();
            }
        }
        private global::System.Int32 _MutualFundID;
        partial void OnMutualFundIDChanging(global::System.Int32 value);
        partial void OnMutualFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfShares
        {
            get
            {
                return _NumberOfShares;
            }
            set
            {
                OnNumberOfSharesChanging(value);
                ReportPropertyChanging("NumberOfShares");
                _NumberOfShares = StructuralObject.SetValidValue(value, "NumberOfShares");
                ReportPropertyChanged("NumberOfShares");
                OnNumberOfSharesChanged();
            }
        }
        private global::System.Decimal _NumberOfShares;
        partial void OnNumberOfSharesChanging(global::System.Decimal value);
        partial void OnNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PricePerShare
        {
            get
            {
                return _PricePerShare;
            }
            set
            {
                OnPricePerShareChanging(value);
                ReportPropertyChanging("PricePerShare");
                _PricePerShare = StructuralObject.SetValidValue(value, "PricePerShare");
                ReportPropertyChanged("PricePerShare");
                OnPricePerShareChanged();
            }
        }
        private global::System.Decimal _PricePerShare;
        partial void OnPricePerShareChanging(global::System.Decimal value);
        partial void OnPricePerShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ActualAmount
        {
            get
            {
                return _ActualAmount;
            }
            set
            {
                OnActualAmountChanging(value);
                ReportPropertyChanging("ActualAmount");
                _ActualAmount = StructuralObject.SetValidValue(value, "ActualAmount");
                ReportPropertyChanged("ActualAmount");
                OnActualAmountChanged();
            }
        }
        private global::System.Decimal _ActualAmount;
        partial void OnActualAmountChanging(global::System.Decimal value);
        partial void OnActualAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvestmentModel", "FK_MutualFundTransaction_MutualFund", "MutualFund")]
        public MutualFund MutualFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MutualFund> MutualFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MutualFund>("InvestmentModel.FK_MutualFundTransaction_MutualFund", "MutualFund", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvestmentModel", Name="MutualFundView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MutualFundView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MutualFundView object.
        /// </summary>
        /// <param name="mutualFundID">Initial value of the MutualFundID property.</param>
        /// <param name="mutualFundSymbol">Initial value of the MutualFundSymbol property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="pricePerShare">Initial value of the PricePerShare property.</param>
        /// <param name="numberOfShares">Initial value of the NumberOfShares property.</param>
        /// <param name="returnType">Initial value of the ReturnType property.</param>
        /// <param name="mutualFundDescription">Initial value of the MutualFundDescription property.</param>
        /// <param name="hasBalance">Initial value of the HasBalance property.</param>
        /// <param name="isRetirementFund">Initial value of the IsRetirementFund property.</param>
        public static MutualFundView CreateMutualFundView(global::System.Int32 mutualFundID, global::System.String mutualFundSymbol, global::System.Decimal amount, global::System.DateTime transactionDate, global::System.Decimal pricePerShare, global::System.Decimal numberOfShares, global::System.String returnType, global::System.String mutualFundDescription, global::System.Boolean hasBalance, global::System.Boolean isRetirementFund)
        {
            MutualFundView mutualFundView = new MutualFundView();
            mutualFundView.MutualFundID = mutualFundID;
            mutualFundView.MutualFundSymbol = mutualFundSymbol;
            mutualFundView.Amount = amount;
            mutualFundView.TransactionDate = transactionDate;
            mutualFundView.PricePerShare = pricePerShare;
            mutualFundView.NumberOfShares = numberOfShares;
            mutualFundView.ReturnType = returnType;
            mutualFundView.MutualFundDescription = mutualFundDescription;
            mutualFundView.HasBalance = hasBalance;
            mutualFundView.IsRetirementFund = isRetirementFund;
            return mutualFundView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MutualFundID
        {
            get
            {
                return _MutualFundID;
            }
            set
            {
                if (_MutualFundID != value)
                {
                    OnMutualFundIDChanging(value);
                    ReportPropertyChanging("MutualFundID");
                    _MutualFundID = StructuralObject.SetValidValue(value, "MutualFundID");
                    ReportPropertyChanged("MutualFundID");
                    OnMutualFundIDChanged();
                }
            }
        }
        private global::System.Int32 _MutualFundID;
        partial void OnMutualFundIDChanging(global::System.Int32 value);
        partial void OnMutualFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundSymbol
        {
            get
            {
                return _MutualFundSymbol;
            }
            set
            {
                OnMutualFundSymbolChanging(value);
                ReportPropertyChanging("MutualFundSymbol");
                _MutualFundSymbol = StructuralObject.SetValidValue(value, false, "MutualFundSymbol");
                ReportPropertyChanged("MutualFundSymbol");
                OnMutualFundSymbolChanged();
            }
        }
        private global::System.String _MutualFundSymbol;
        partial void OnMutualFundSymbolChanging(global::System.String value);
        partial void OnMutualFundSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                if (_TransactionDate != value)
                {
                    OnTransactionDateChanging(value);
                    ReportPropertyChanging("TransactionDate");
                    _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                    ReportPropertyChanged("TransactionDate");
                    OnTransactionDateChanged();
                }
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PricePerShare
        {
            get
            {
                return _PricePerShare;
            }
            set
            {
                OnPricePerShareChanging(value);
                ReportPropertyChanging("PricePerShare");
                _PricePerShare = StructuralObject.SetValidValue(value, "PricePerShare");
                ReportPropertyChanged("PricePerShare");
                OnPricePerShareChanged();
            }
        }
        private global::System.Decimal _PricePerShare;
        partial void OnPricePerShareChanging(global::System.Decimal value);
        partial void OnPricePerShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfShares
        {
            get
            {
                return _NumberOfShares;
            }
            set
            {
                OnNumberOfSharesChanging(value);
                ReportPropertyChanging("NumberOfShares");
                _NumberOfShares = StructuralObject.SetValidValue(value, "NumberOfShares");
                ReportPropertyChanged("NumberOfShares");
                OnNumberOfSharesChanged();
            }
        }
        private global::System.Decimal _NumberOfShares;
        partial void OnNumberOfSharesChanging(global::System.Decimal value);
        partial void OnNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReturnType
        {
            get
            {
                return _ReturnType;
            }
            set
            {
                if (_ReturnType != value)
                {
                    OnReturnTypeChanging(value);
                    ReportPropertyChanging("ReturnType");
                    _ReturnType = StructuralObject.SetValidValue(value, false, "ReturnType");
                    ReportPropertyChanged("ReturnType");
                    OnReturnTypeChanged();
                }
            }
        }
        private global::System.String _ReturnType;
        partial void OnReturnTypeChanging(global::System.String value);
        partial void OnReturnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MutualFundDescription
        {
            get
            {
                return _MutualFundDescription;
            }
            set
            {
                OnMutualFundDescriptionChanging(value);
                ReportPropertyChanging("MutualFundDescription");
                _MutualFundDescription = StructuralObject.SetValidValue(value, false, "MutualFundDescription");
                ReportPropertyChanged("MutualFundDescription");
                OnMutualFundDescriptionChanged();
            }
        }
        private global::System.String _MutualFundDescription;
        partial void OnMutualFundDescriptionChanging(global::System.String value);
        partial void OnMutualFundDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasBalance
        {
            get
            {
                return _HasBalance;
            }
            set
            {
                OnHasBalanceChanging(value);
                ReportPropertyChanging("HasBalance");
                _HasBalance = StructuralObject.SetValidValue(value, "HasBalance");
                ReportPropertyChanged("HasBalance");
                OnHasBalanceChanged();
            }
        }
        private global::System.Boolean _HasBalance;
        partial void OnHasBalanceChanging(global::System.Boolean value);
        partial void OnHasBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRetirementFund
        {
            get
            {
                return _IsRetirementFund;
            }
            set
            {
                if (_IsRetirementFund != value)
                {
                    OnIsRetirementFundChanging(value);
                    ReportPropertyChanging("IsRetirementFund");
                    _IsRetirementFund = StructuralObject.SetValidValue(value, "IsRetirementFund");
                    ReportPropertyChanged("IsRetirementFund");
                    OnIsRetirementFundChanged();
                }
            }
        }
        private global::System.Boolean _IsRetirementFund;
        partial void OnIsRetirementFundChanging(global::System.Boolean value);
        partial void OnIsRetirementFundChanged();

        #endregion

    }

    #endregion

}
